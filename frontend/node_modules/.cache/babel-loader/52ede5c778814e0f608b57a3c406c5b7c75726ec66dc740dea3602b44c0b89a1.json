{"ast":null,"code":"var _jsxFileName = \"/Users/parasmanirai/Desktop/web-print/frontend/src/components/FollowingAnalysis/FollowingGrowthChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FollowingGrowthChart = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null); // To store the image URL of the plot\n  const [loading, setLoading] = useState(false); // To handle loading state\n  var fileName = \"\";\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      // Log all key-value pairs in FormData\n      for (let [key, value] of formData.entries()) {\n        console.log(`${key}: ${value}`);\n        if (value instanceof File) {\n          console.log(\"File Name:\", value.name);\n          fileName = value.name;\n          console.log(\"File Size:\", value.size);\n          console.log(\"File Type:\", value.type);\n        }\n      }\n      try {\n        console.log(\"haha\");\n        const response = await axios.post('http://localhost:8000/upload/', formData);\n        console.log(response.data, 'response');\n        alert(\"File uploaded successfully!\");\n        setLoading(true);\n        try {\n          // Send POST request to generate the plot\n          const response = await fetch('http://localhost:8000/upload/visualize/', {\n            method: 'POST',\n            // Assume the backend will handle file retrieval\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              file_name: fileName\n            }) // Send the file name\n          });\n          const result = await response.json();\n          console.log(\"result is \", result);\n\n          // Set the image URL received from the backend\n          if (result.followers_data.follower_growth_chart) {\n            setImageUrl(`http://localhost:8000/${result.followers_data.follower_growth_chart}`); // Full image URL\n          } else {\n            alert('Failed to generate plot');\n          }\n        } catch (error) {\n          console.error('Error generating plot:', error);\n          alert('Error generating plot');\n        } finally {\n          setLoading(false);\n        }\n      } catch (error) {\n        console.log(\"Error uploading file:\", error);\n        alert(\"Failed to upload file\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.container,\n      children: \"Generate your following report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.fileUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \".json\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: loading,\n        children: loading ? 'Generating Plot...' : 'Generate Report'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cumulative Followers Growth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"Cumulative Followers Growth\",\n          style: styles.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FollowingGrowthChart, \"o81M/LHInDreF40XuybnzMJBT6s=\");\n_c = FollowingGrowthChart;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: '#f7f7f7',\n    padding: '20px'\n  },\n  fileUpload: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    padding: '20px',\n    border: '1px solid grey',\n    margin: '20px',\n    borderStyle: 'dashed',\n    borderColor: 'grey'\n  }\n};\nexport default FollowingGrowthChart;\nvar _c;\n$RefreshReg$(_c, \"FollowingGrowthChart\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","FollowingGrowthChart","_s","file","setFile","imageUrl","setImageUrl","loading","setLoading","fileName","handleFileChange","e","target","files","handleUpload","formData","FormData","append","key","value","entries","console","log","File","name","size","type","response","post","data","alert","fetch","method","headers","body","JSON","stringify","file_name","result","json","followers_data","follower_growth_chart","error","children","style","styles","container","_jsxFileName","lineNumber","columnNumber","fileUpload","onChange","accept","onClick","disabled","src","alt","image","_c","display","flexDirection","alignItems","backgroundColor","padding","justifyContent","border","margin","borderStyle","borderColor","$RefreshReg$"],"sources":["/Users/parasmanirai/Desktop/web-print/frontend/src/components/FollowingAnalysis/FollowingGrowthChart.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst FollowingGrowthChart = () => {\n  const [file, setFile] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null); // To store the image URL of the plot\n  const [loading, setLoading] = useState(false); // To handle loading state\n  var fileName = \"\"\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  }\n\n  const handleUpload = async () => {\n    \n    if(file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      // Log all key-value pairs in FormData\n      for (let [key, value] of formData.entries()) {\n        console.log(`${key}: ${value}`);\n        if (value instanceof File) {\n          console.log(\"File Name:\", value.name);\n          fileName = value.name\n          console.log(\"File Size:\", value.size);\n          console.log(\"File Type:\", value.type);\n        }\n      }\n\n      try{\n        console.log(\"haha\")\n        const response = await axios.post('http://localhost:8000/upload/', formData);\n        \n        console.log(response.data, 'response');\n        alert(\"File uploaded successfully!\");\n        setLoading(true);\n\n        try {\n        // Send POST request to generate the plot\n          const response = await fetch('http://localhost:8000/upload/visualize/', {\n            method: 'POST', // Assume the backend will handle file retrieval\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ file_name: fileName }), // Send the file name\n          });\n\n          const result = await response.json();\n          console.log(\"result is \", result)\n\n          // Set the image URL received from the backend\n          if (result.followers_data.follower_growth_chart) {\n            setImageUrl(`http://localhost:8000/${result.followers_data.follower_growth_chart}`); // Full image URL\n          } else {\n            alert('Failed to generate plot');\n          }\n        \n        } catch (error) {\n          console.error('Error generating plot:', error);\n          alert('Error generating plot');\n        } finally {\n          setLoading(false);\n        }\n\n\n\n      } catch (error) {\n        console.log(\"Error uploading file:\", error);\n        alert(\"Failed to upload file\");\n      }\n    }\n  }\n\n  return(\n    <>\n      <h1 style={styles.container}>Generate your following report</h1>\n      <div style={styles.fileUpload}>\n        <input type='file' onChange={handleFileChange} accept='.json'/>\n        <button onClick={handleUpload} disabled={loading} >{loading ? 'Generating Plot...' : 'Generate Report'}</button>\n      </div>\n      <div>\n       {/* Display the Plot Image */}\n       {imageUrl && (\n         <div>\n           <h3>Cumulative Followers Growth</h3>\n           <img src={imageUrl} alt=\"Cumulative Followers Growth\" style={styles.image} />\n         </div>\n        )}\n      </div>\n    </>\n  );\n\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: '#f7f7f7',\n    padding: '20px',\n  },\n  fileUpload: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    padding: '20px',\n    border: '1px solid grey',\n    margin: '20px',\n    borderStyle: 'dashed',\n    borderColor: 'grey',\n  }\n}\n\nexport default FollowingGrowthChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}